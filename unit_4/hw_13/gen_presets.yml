# gen_presets.yml for Library System (driver.py)

# --- Existing Scenarios (Enhanced with new parameters where applicable) ---
# ... (Scenarios 1-22 as previously defined) ...

# Scenario 1: Small Library, Low Activity, Few Cycles
# Goal: Basic functionality check, quick run.
# New params: Default values, low impact.
- "--init_types 3 --init_min_cp 1 --init_max_cp 2 --max_cycles 5 --max_total_commands 20 --min_req 1 --max_req 2 --b_weight 1 --o_weight 1 --q_weight 1 --new_s_ratio 0.1 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.7"

# Scenario 2: Medium Library, Moderate Activity, Focus on Borrows
# Goal: Test borrow/return mechanics thoroughly.
# New params: Slightly higher return propensity.
- "--init_types 10 --init_min_cp 2 --init_max_cp 5 --max_cycles 15 --max_total_commands 100 --min_req 2 --max_req 5 --b_weight 5 --o_weight 2 --q_weight 2 --failed_o_weight 1 --new_s_ratio 0.2 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.8 --pick_prop 0.6"

# Scenario 3: Many Initial C-Type Books, High Order/Pick Activity, C-Book Focus
# Goal: Stress test the reservation system (ordering and picking C-books).
# New params: High C-book priority, high pick propensity.
- "--init_types 15 --init_min_cp 1 --init_max_cp 3 --max_cycles 20 --max_total_commands 150 --min_req 3 --max_req 6 --b_weight 1 --o_weight 5 --q_weight 1 --failed_o_weight 2 --new_s_ratio 0.15 --b_prio 0.2 --c_prio 0.8 --ret_prop 0.6 --pick_prop 0.9"

# Scenario 4: Long Run, High Query Load, Many Students (Months Span)
# Goal: Test query performance and handling of many student records over time.
# New params: Default values. Increased cycles and skips to achieve ~3-4 months.
- "--init_types 8 --init_min_cp 3 --init_max_cp 8 --max_cycles 90 --max_total_commands 400 --min_req 5 --max_req 10 --b_weight 2 --o_weight 2 --q_weight 6 --new_s_ratio 0.3 --min_skip 0 --max_skip 1 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.7" # (90 cycles * ~1 day avg = ~3 months)

# Scenario 5: Stress Test Failed Orders and Edge Cases
# Goal: Generate many situations where orders should fail, testing SUT's rejection logic.
# New params: Default values, focus is on failed_o_weight.
- "--init_types 5 --init_min_cp 1 --init_max_cp 2 --max_cycles 10 --max_total_commands 80 --min_req 2 --max_req 4 --b_weight 1 --o_weight 1 --q_weight 1 --failed_o_weight 5 --new_s_ratio 0.1 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.7"

# Scenario 6: No New Students after Initial, Focus on Existing User Limits
# Goal: Test how the system handles established users hitting their borrowing/ordering limits.
# New params: Default values.
- "--init_types 7 --init_min_cp 2 --init_max_cp 4 --max_cycles 15 --max_total_commands 120 --min_req 3 --max_req 5 --b_weight 3 --o_weight 3 --q_weight 2 --new_s_ratio 0.0 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.7"

# Scenario 7: Minimal Initial Books, Many Order Requests
# Goal: Force contention for few resources, testing order queue and reservation fulfillment.
# New params: High pick propensity to try and clear AO quickly.
- "--init_types 2 --init_min_cp 1 --init_max_cp 1 --max_cycles 20 --max_total_commands 100 --min_req 2 --max_req 5 --b_weight 1 --o_weight 4 --q_weight 1 --failed_o_weight 1 --new_s_ratio 0.1 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.9"

# Scenario 8: Short Days (Few Requests), Many Days Skipped (Reservation Expiry Test)
# Goal: Test handling of time progression and reservation expiry over longer periods with sparse activity.
# New params: Moderate pick propensity to see if they try before/after expiry.
- "--init_types 5 --init_min_cp 2 --init_max_cp 3 --max_cycles 10 --max_total_commands 50 --min_req 1 --max_req 1 --min_skip 3 --max_skip 7 --b_weight 2 --o_weight 2 --q_weight 2 --new_s_ratio 0.1 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.6"

# Scenario 9: Max Initial Books, Max Requests Per Day, Stress Overall Throughput
# Goal: General stress test with high load.
# New params: Balanced priorities and propensities.
- "--init_types 20 --init_min_cp 5 --init_max_cp 10 --max_cycles 25 --max_total_commands 300 --min_req 8 --max_req 15 --b_weight 3 --o_weight 3 --q_weight 3 --failed_o_weight 1 --new_s_ratio 0.25 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.7"

# Scenario 10: Specific Start Date (e.g., end of year), Test Date Logic
# Goal: Check if specific date ranges or year boundaries are handled correctly.
# New params: Default values.
- "--init_types 6 --init_min_cp 2 --init_max_cp 4 --max_cycles 10 --max_total_commands 70 --start_year 2025 --start_month 12 --start_day 20 --min_req 2 --max_req 4 --b_weight 2 --o_weight 2 --q_weight 2 --new_s_ratio 0.1 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.7"

# Scenario 11: Very few B-type books, high demand for B-type (B-Book Focus)
# Goal: Stress B-book limits.
# New params: Very high B-book priority.
- "--init_types 4 --init_min_cp 1 --init_max_cp 1 --max_cycles 15 --max_total_commands 100 --min_req 3 --max_req 5 --b_weight 10 --o_weight 1 --q_weight 1 --new_s_ratio 0.4 --b_prio 0.9 --c_prio 0.1 --ret_prop 0.7 --pick_prop 0.7"

# Scenario 12: Rapid Cycling with Minimal Skips
# Goal: Test frequent OPEN/CLOSE processing and associated tidying logic, especially for BRO.
# New params: High return propensity to fill BRO.
- "--init_types 8 --init_min_cp 2 --init_max_cp 4 --max_cycles 20 --max_total_commands 150 --min_skip 0 --max_skip 0 --min_req 2 --max_req 4 --b_weight 4 --o_weight 2 --q_weight 1 --new_s_ratio 0.1 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.9 --pick_prop 0.7"

# Scenario 13: Focus on Querying Non-Existent or Rarely Moved Books
# Goal: Test query robustness for various book states.
# New params: Default values.
- "--init_types 10 --init_min_cp 1 --init_max_cp 2 --max_cycles 10 --max_total_commands 80 --q_weight 10 --b_weight 1 --o_weight 1 --failed_o_weight 0 --new_s_ratio 0.1 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.7"

# Scenario 14: Maximize commands quickly, fewer cycles (to hit max_total_commands early)
# Goal: Test behavior when max_total_commands is the limiting factor.
# New params: Default values.
- "--init_types 5 --init_min_cp 3 --init_max_cp 5 --max_cycles 30 --max_total_commands 50 --min_req 5 --max_req 10 --b_weight 2 --o_weight 2 --q_weight 1 --failed_o_weight 1 --new_s_ratio 0.1 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.7"

# Scenario 15: Long period of inactivity simulated by later start date
# Goal: Test system state after a simulated quiet period.
# New params: Default values.
- "--init_types 5 --init_min_cp 2 --init_max_cp 3 --max_cycles 15 --max_total_commands 100 --min_skip 0 --max_skip 1 --start_year 2025 --start_month 3 --start_day 1 --b_weight 2 --o_weight 2 --q_weight 1 --failed_o_weight 1 --new_s_ratio 0.1 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.7"

# Scenario 16: A-Type Book Interaction Attempts
# Goal: Ensure A-type books (if generated) are correctly handled (rejected for borrow/order).
# New params: Balanced B/C prio, default propensities.
- "--init_types 10 --init_min_cp 1 --init_max_cp 2 --max_cycles 10 --max_total_commands 80 --min_req 3 --max_req 5 --b_weight 4 --o_weight 4 --q_weight 1 --failed_o_weight 2 --new_s_ratio 0.2 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.7"

# Scenario 17: Extreme B-Book Scarcity and Demand
# Goal: Forcefully test the 'one B-book' rule (held or ordered) with very high competition.
# New params: Very high B-book priority, high pick propensity for B books.
- "--init_types 2 --init_min_cp 1 --init_max_cp 1 --max_cycles 15 --max_total_commands 100 --min_req 4 --max_req 6 --b_weight 8 --o_weight 8 --q_weight 1 --failed_o_weight 4 --new_s_ratio 0.1 --b_prio 0.95 --c_prio 0.05 --ret_prop 0.7 --pick_prop 0.8"

# Scenario 18: Extreme C-Book (Same ISBN) Scarcity and Demand
# Goal: Forcefully test 'one C-book per ISBN' rule (held or ordered) with high competition for few C-book ISBNs.
# New params: Very high C-book priority, high pick propensity for C books.
- "--init_types 2 --init_min_cp 2 --init_max_cp 2 --max_cycles 15 --max_total_commands 100 --min_req 4 --max_req 6 --b_weight 1 --o_weight 8 --q_weight 1 --failed_o_weight 4 --new_s_ratio 0.1 --b_prio 0.05 --c_prio 0.95 --ret_prop 0.7 --pick_prop 0.8"

# Scenario 19: Total Book Exhaustion Test
# Goal: Try to get all books borrowed or reserved in AO, then observe behavior for new requests.
# New params: Balanced priority, high pick propensity to clear AO.
- "--init_types 1 --init_min_cp 1 --init_max_cp 1 --max_cycles 10 --max_total_commands 50 --min_req 2 --max_req 3 --b_weight 5 --o_weight 5 --q_weight 1 --failed_o_weight 1 --new_s_ratio 0.5 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.9"

# Scenario 20: AO Pickup Deadline Stress - Just Before & Just After
# Goal: Generate scenarios where students attempt to pick up books very close to, or just after, their AO reservation deadline.
# New params: High pick propensity to encourage attempts, relies on min/max_skip for timing.
- "--init_types 5 --init_min_cp 1 --init_max_cp 2 --max_cycles 20 --max_total_commands 100 --min_req 1 --max_req 2 --o_weight 5 --b_weight 1 --q_weight 1 --failed_o_weight 1 --new_s_ratio 0.2 --min_skip 4 --max_skip 5 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.9"

# Scenario 21: BRO Saturation before OPEN tidy
# Goal: Fill BRO with returned books, then trigger OPEN to test SUT's mandatory BRO clearing.
# New params: High return propensity, minimal skips.
- "--init_types 10 --init_min_cp 3 --init_max_cp 5 --max_cycles 15 --max_total_commands 150 --min_req 5 --max_req 8 --b_weight 6 --o_weight 2 --q_weight 1 --failed_o_weight 1 --new_s_ratio 0.1 --min_skip 0 --max_skip 0 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.95 --pick_prop 0.7"

# Scenario 22: All Students, All Books Initialized, Then No New Students/Books
# Goal: A large, stable system where limits and long-term interactions are tested without influx of new elements. Max out initial setup.
# New params: Default values.
- "--init_types 20 --init_min_cp 10 --init_max_cp 10 --max_cycles 30 --max_total_commands 300 --min_req 3 --max_req 6 --b_weight 3 --o_weight 3 --q_weight 2 --failed_o_weight 1 --new_s_ratio 0.0 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.7"

# Scenario 23: Very Long Run (Several Months), Fluctuating Activity
# Goal: Test system stability, memory usage, and handling of state over an extended period (e.g., 6+ months).
# Combines long cycles with varying skip days.
- "--init_types 10 --init_min_cp 3 --init_max_cp 6 --max_cycles 180 --max_total_commands 1000 --min_req 2 --max_req 7 --min_skip 0 --max_skip 2 --b_weight 3 --o_weight 3 --q_weight 3 --failed_o_weight 1 --new_s_ratio 0.1 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.7" # (180 cycles * ~1.5 day avg = ~9 months)

# Scenario 24: Pick Storm After Long Delay (High Pick Propensity, Likely Failures)
# Goal: Create many pending orders, then a long delay, then a high chance of pick attempts, many of which should fail due to expiry.
# Alternative: Assume some orders happen naturally, then use high pick_prop with long skip.
- "--init_types 8 --init_min_cp 1 --init_max_cp 2 --max_cycles 25 --max_total_commands 120 --min_req 1 --max_req 3 --o_weight 4 --b_weight 1 --q_weight 1 --failed_o_weight 1 --new_s_ratio 0.15 --min_skip 6 --max_skip 8 --b_prio 0.4 --c_prio 0.6 --ret_prop 0.5 --pick_prop 0.95"

# Scenario 25: Universal Apathy (Low Return and Pick Propensity)
# Goal: Test system when students are very unlikely to return books or pick up reservations, stressing AO/BRO tidying.
# New params: Very low ret_prop and pick_prop.
- "--init_types 10 --init_min_cp 2 --init_max_cp 4 --max_cycles 20 --max_total_commands 150 --min_req 3 --max_req 5 --b_weight 3 --o_weight 3 --q_weight 2 --failed_o_weight 1 --new_s_ratio 0.1 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.1 --pick_prop 0.1"

# Scenario 26: Extreme Ultra Long Pressure Test (Max everything, many cycles)
# Goal: Maximum stress on all aspects of the system over a very long simulated time.
# Will hit max_total_commands long before max_cycles.
- "--init_types 20 --init_min_cp 10 --init_max_cp 10 --max_cycles 300 --max_total_commands 2000 --min_req 8 --max_req 15 --min_skip 0 --max_skip 0 --b_weight 4 --o_weight 4 --q_weight 4 --failed_o_weight 2 --new_s_ratio 0.2 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.8 --pick_prop 0.8"

# Scenario 27: B-Book Priority High, but Low Pick Propensity for B-Books
# Goal: Students want B-books, but are lazy to pick them up if reserved. Tests if SUT correctly handles B-book reservations at AO over time.
# (gen.py doesn't currently distinguish pick_prop by book type, so this is a general low pick_prop with B-focus on order/borrow)
- "--init_types 6 --init_min_cp 1 --init_max_cp 2 --max_cycles 20 --max_total_commands 120 --min_req 2 --max_req 4 --b_weight 6 --o_weight 6 --q_weight 1 --failed_o_weight 2 --new_s_ratio 0.1 --b_prio 0.9 --c_prio 0.1 --ret_prop 0.7 --pick_prop 0.2"

# Scenario 28: High Churn of C-Books
# Goal: Many C-books being borrowed, returned, ordered, and picked, testing C-book specific limits and AO/BRO flow for C-books.
- "--init_types 10 --init_min_cp 3 --init_max_cp 5 --max_cycles 25 --max_total_commands 200 --min_req 4 --max_req 7 --b_weight 1 --o_weight 7 --q_weight 2 --failed_o_weight 2 --new_s_ratio 0.15 --b_prio 0.1 --c_prio 0.9 --ret_prop 0.8 --pick_prop 0.8"

# --- NEW SCENARIOS FOR SCARCE RESOURCES & HIGH CHURN ---

# Scenario 29: Single B-Book High Churn
# Goal: Only one B-book type, one copy. High frequency borrow/order/return/pick for this single book.
- "--init_types 1 --init_min_cp 1 --init_max_cp 1 --max_cycles 25 --max_total_commands 200 --min_req 4 --max_req 7 --b_weight 7 --o_weight 7 --q_weight 1 --failed_o_weight 2 --new_s_ratio 0.2 --b_prio 1.0 --c_prio 0.0 --ret_prop 0.9 --pick_prop 0.9" # Assumes init_types 1 will be a B-book if possible by gen

# Scenario 30: Single C-Book High Churn
# Goal: Only one C-book type, one copy. High frequency borrow/order/return/pick for this single book.
- "--init_types 1 --init_min_cp 1 --init_max_cp 1 --max_cycles 25 --max_total_commands 200 --min_req 4 --max_req 7 --b_weight 1 --o_weight 7 --q_weight 1 --failed_o_weight 2 --new_s_ratio 0.2 --b_prio 0.0 --c_prio 1.0 --ret_prop 0.9 --pick_prop 0.9" # Assumes init_types 1 will be a C-book if possible by gen

# Scenario 31: Two Scarce Book Types (1B, 1C), Intense Competition
# Goal: Very few books (one B, one C), high demand for both. Test simultaneous contention and rule adherence.
# relies on gen.py producing one B and one C if init_types is 2.
- "--init_types 2 --init_min_cp 1 --init_max_cp 1 --max_cycles 30 --max_total_commands 250 --min_req 5 --max_req 8 --b_weight 5 --o_weight 5 --q_weight 1 --failed_o_weight 3 --new_s_ratio 0.3 --b_prio 0.7 --c_prio 0.7 --ret_prop 0.8 --pick_prop 0.8"

# Scenario 32: Minimal Books (Mixed), Sustained Multi-Round Operations
# Goal: Few books, ensure they are borrowed, returned, ordered by another, picked, returned, borrowed by third, etc. Many rounds of this.
# High propensities for return/pick to keep the cycle moving. Max_total_commands is key.
- "--init_types 3 --init_min_cp 1 --init_max_cp 2 --max_cycles 40 --max_total_commands 300 --min_req 3 --max_req 5 --b_weight 4 --o_weight 4 --q_weight 1 --failed_o_weight 1 --new_s_ratio 0.1 --b_prio 0.6 --c_prio 0.6 --ret_prop 0.95 --pick_prop 0.95"

# Scenario 33: Scarce Resources, High Failed Order Weight
# Goal: Very few books, and high weight for generating failed orders. Test SUT's rejection messages and state consistency.
- "--init_types 2 --init_min_cp 1 --init_max_cp 1 --max_cycles 20 --max_total_commands 150 --min_req 3 --max_req 6 --b_weight 2 --o_weight 2 --q_weight 1 --failed_o_weight 8 --new_s_ratio 0.1 --b_prio 0.5 --c_prio 0.5 --ret_prop 0.7 --pick_prop 0.7"